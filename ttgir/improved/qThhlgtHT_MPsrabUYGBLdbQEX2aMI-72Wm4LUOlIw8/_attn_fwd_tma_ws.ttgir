#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0)
#loc1 = loc(unknown)
#loc3 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1284:8)
#loc18 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":841:12)
#loc37 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":289:50)
#loc44 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":292:29)
#mma = #triton_gpu.nvidia_mma<{versionMajor = 3, versionMinor = 0, warpsPerCTA = [4, 1], instrShape = [16, 128, 16]}>
#shared = #triton_gpu.shared<{vec = 8, perPhase = 1, maxPhase = 8, order = [1, 0], hasLeadingOffset = true}>
#shared1 = #triton_gpu.shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [0], hasLeadingOffset = false}>
#shared2 = #triton_gpu.shared<{vec = 8, perPhase = 1, maxPhase = 8, order = [0, 1], hasLeadingOffset = true}>
#loc101 = loc(callsite(#loc1 at #loc37))
#loc108 = loc(callsite(#loc1 at #loc44))
#loc146 = loc(callsite(#loc101 at #loc18))
#loc153 = loc(callsite(#loc108 at #loc18))
#loc164 = loc(callsite(#loc146 at #loc3))
#loc167 = loc(callsite(#loc153 at #loc3))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warp-groups-per-cta" = 3 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.proton-slots" = 384 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @_attn_fwd_tma_ws(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg3: f32 loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg6: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg7: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg8: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg9: !tt.ptr<i8, 0> {tt.nv_tma_desc = 1 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg18: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg19: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg20: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg21: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg22: i32 loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg23: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg24: i32 {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0), %arg25: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1210:0)) attributes {noinline = false} {
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst = arith.constant {async_task_id = dense<1> : vector<1xi32>} 1.44269502 : f32 loc(#loc1)
    %c2_i32 = arith.constant {async_task_id = dense<0> : vector<1xi32>} 2 : i32 loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %cst_0 = arith.constant {async_task_id = dense<0> : vector<1xi32>} dense<0.000000e+00> : tensor<64x128xf32, #mma> loc(#loc1)
    %cst_1 = arith.constant {async_task_id = dense<0> : vector<1xi32>} dense<0xFF800000> : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc1)
    %cst_2 = arith.constant {async_task_id = dense<0> : vector<1xi32>} dense<1.000000e+00> : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc1)
    %c128_i32 = arith.constant {async_task_id = dense<0> : vector<1xi32>} 128 : i32 loc(#loc1)
    %c64_i32 = arith.constant {async_task_id = dense<0> : vector<1xi32>} 64 : i32 loc(#loc1)
    %false = arith.constant {async_task_id = dense<0> : vector<1xi32>} false loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = triton_gpu.local_alloc  : () -> !tt.memdesc<1x64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
    %1 = triton_gpu.local_alloc  : () -> !tt.memdesc<1x64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
    %2 = triton_gpu.local_alloc  : () -> !tt.memdesc<2x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
    %3 = triton_gpu.local_alloc  : () -> !tt.memdesc<2x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
    %4 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %5 = triton_gpu.memdesc_subview %4[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %5, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %6 = triton_gpu.memdesc_subview %4[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %6, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %7 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %8 = triton_gpu.memdesc_subview %7[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %8, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %9 = triton_gpu.memdesc_subview %7[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %9, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %10 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %11 = triton_gpu.memdesc_subview %10[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %11, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %12 = triton_gpu.memdesc_subview %10[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %12, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %13 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %14 = triton_gpu.memdesc_subview %13[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %14, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %15 = triton_gpu.memdesc_subview %13[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %15, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %16 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %17 = triton_gpu.memdesc_subview %16[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %17, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %18 = triton_gpu.memdesc_subview %16[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %18, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %19 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %20 = triton_gpu.memdesc_subview %19[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %20, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %21 = triton_gpu.memdesc_subview %19[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %21, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %22 = triton_gpu.local_alloc  : () -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %23 = triton_gpu.local_alloc  : () -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %24 = triton_gpu.memdesc_subview %22[%c0_i32] : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %24, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %25 = triton_gpu.memdesc_subview %23[%c0_i32] : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %25, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    gpu.barrier loc(#loc)
    %26 = triton_gpu.local_alloc  : () -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %27 = triton_gpu.local_alloc  : () -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %28 = triton_gpu.memdesc_subview %26[%c0_i32] : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %28, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %29 = triton_gpu.memdesc_subview %27[%c0_i32] : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %29, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    gpu.barrier loc(#loc)
    %30 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %31 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %32 = triton_gpu.memdesc_subview %30[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %32, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %33 = triton_gpu.memdesc_subview %31[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %33, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %34 = triton_gpu.memdesc_subview %30[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %34, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %35 = triton_gpu.memdesc_subview %31[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %35, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    gpu.barrier loc(#loc)
    %36 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %37 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %38 = triton_gpu.memdesc_subview %36[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %38, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %39 = triton_gpu.memdesc_subview %37[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %39, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %40 = triton_gpu.memdesc_subview %36[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %40, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %41 = triton_gpu.memdesc_subview %37[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %41, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    gpu.barrier loc(#loc)
    %42 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %43 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %44 = triton_gpu.memdesc_subview %42[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %44, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %45 = triton_gpu.memdesc_subview %43[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %45, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %46 = triton_gpu.memdesc_subview %42[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %46, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %47 = triton_gpu.memdesc_subview %43[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %47, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    gpu.barrier loc(#loc)
    %48 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %49 = triton_gpu.local_alloc  : () -> !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %50 = triton_gpu.memdesc_subview %48[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %50, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %51 = triton_gpu.memdesc_subview %49[%c0_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %51, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %52 = triton_gpu.memdesc_subview %48[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %52, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    %53 = triton_gpu.memdesc_subview %49[%c1_i32] : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    triton_nvidia_gpu.init_barrier %53, 1 : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
    gpu.barrier loc(#loc)
    %54 = triton_nvidia_gpu.get_canonical_warp_id : i32 loc(#loc)
    %55 = arith.divui %54, %c4_i32 : i32 loc(#loc)
    %56 = arith.cmpi eq, %55, %c0_i32 : i32 loc(#loc)
    scf.if %56 {
      triton_nvidia_gpu.reg_dealloc 24 loc(#loc)
      %59 = tt.get_program_id x {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc68)
      %60 = tt.get_program_id y {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc69)
      %61 = arith.divsi %60, %arg23 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc70)
      %62 = arith.remsi %60, %arg23 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc71)
      %63 = arith.extsi %61 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc72)
      %64 = arith.extsi %arg10 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc73)
      %65 = arith.muli %63, %64 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc73)
      %66 = arith.extsi %62 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc74)
      %67 = arith.extsi %arg11 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc75)
      %68 = arith.muli %66, %67 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc75)
      %69 = arith.addi %65, %68 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc76)
      %70 = arith.extsi %arg12 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc77)
      %71 = arith.divsi %69, %70 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc77)
      %72 = arith.muli %59, %c128_i32 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc78)
      %73 = arith.extsi %72 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc79)
      %74 = arith.addi %71, %73 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc79)
      %75 = arith.trunci %74 {async_task_id = dense<0> : vector<1xi32>} : i64 to i32 loc(#loc80)
      %76 = arith.addi %75, %c64_i32 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc81)
      %77 = triton_gpu.memdesc_subview %23[%c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc81)
      triton_nvidia_gpu.wait_barrier %77, %c1_i32 {async_task_id = dense<0> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc81)
      %78 = triton_gpu.memdesc_subview %19[%c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
      triton_nvidia_gpu.barrier_expect %78, 16384 {async_task_id = dense<0> : vector<1xi32>}, %true : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
      %79 = triton_gpu.memdesc_subview %0[%c0_i32, %c0_i32, %c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<1x64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
      triton_nvidia_gpu.async_tma_copy_global_to_local %arg6[%75, %c0_i32] %79, %78, %true {async_task_id = dense<0> : vector<1xi32>} : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
      %80 = triton_gpu.memdesc_subview %27[%c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc81)
      triton_nvidia_gpu.wait_barrier %80, %c1_i32 {async_task_id = dense<0> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc81)
      %81 = triton_gpu.memdesc_subview %16[%c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
      triton_nvidia_gpu.barrier_expect %81, 16384 {async_task_id = dense<0> : vector<1xi32>}, %true : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
      %82 = triton_gpu.memdesc_subview %1[%c0_i32, %c0_i32, %c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<1x64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
      triton_nvidia_gpu.async_tma_copy_global_to_local %arg6[%76, %c0_i32] %82, %81, %true {async_task_id = dense<0> : vector<1xi32>} : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
      %83 = arith.extsi %arg15 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc131)
      %84 = arith.extsi %arg18 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc132)
      %85:2 = scf.for %arg26 = %c0_i32 to %arg24 step %c128_i32 iter_args(%arg27 = %false, %arg28 = %c0_i32) -> (i1, i32)  : i32 {
        tt.proton_record <1, "start", "cycle", "warpgroup">
        %86 = arith.divsi %69, %83 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc131)
        %87 = arith.trunci %86 {async_task_id = dense<0> : vector<1xi32>} : i64 to i32 loc(#loc134)
        %88 = arith.addi %arg26, %87 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc135)
        %89 = triton_gpu.memdesc_subview %31[%arg28] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc136)
        %90 = arith.xori %arg27, %true : i1 loc(#loc136)
        %91 = arith.extui %90 : i1 to i32 loc(#loc136)
        tt.proton_record <1, "end", "cycle", "warpgroup">
        triton_nvidia_gpu.wait_barrier %89, %91 {async_task_id = dense<0> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc136)
        tt.proton_record <2, "start", "cycle", "warpgroup">
        %92 = triton_gpu.memdesc_subview %37[%arg28] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc136)
        tt.proton_record <2, "end", "cycle", "warpgroup">
        triton_nvidia_gpu.wait_barrier %92, %91 {async_task_id = dense<0> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc136)
        tt.proton_record <3, "start", "cycle", "warpgroup">
        %93 = triton_gpu.memdesc_subview %10[%arg28] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        triton_nvidia_gpu.barrier_expect %93, 32768 {async_task_id = dense<0> : vector<1xi32>}, %true : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        %94 = triton_gpu.memdesc_subview %2[%arg28, %c0_i32, %c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
        triton_nvidia_gpu.async_tma_copy_global_to_local %arg7[%88, %c0_i32] %94, %93, %true {async_task_id = dense<0> : vector<1xi32>} : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
        tt.proton_record <3, "end", "cycle", "warpgroup">
        tt.proton_record <4, "start", "cycle", "warpgroup">
        %95 = arith.divsi %69, %84 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc132)
        %96 = arith.extsi %arg26 {async_task_id = dense<0> : vector<1xi32>} : i32 to i64 loc(#loc137)
        %97 = arith.addi %95, %96 {async_task_id = dense<0> : vector<1xi32>} : i64 loc(#loc137)
        %98 = arith.trunci %97 {async_task_id = dense<0> : vector<1xi32>} : i64 to i32 loc(#loc138)
        %99 = triton_gpu.memdesc_subview %43[%arg28] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc139)
        tt.proton_record <4, "end", "cycle", "warpgroup">
        triton_nvidia_gpu.wait_barrier %99, %91 {async_task_id = dense<0> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc139)
        tt.proton_record <5, "start", "cycle", "warpgroup">
        %100 = triton_gpu.memdesc_subview %49[%arg28] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc139)
        tt.proton_record <5, "end", "cycle", "warpgroup">
        triton_nvidia_gpu.wait_barrier %100, %91 {async_task_id = dense<0> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc139)
        tt.proton_record <6, "start", "cycle", "warpgroup">
        %101 = triton_gpu.memdesc_subview %4[%arg28] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        triton_nvidia_gpu.barrier_expect %101, 32768 {async_task_id = dense<0> : vector<1xi32>}, %true : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        %102 = triton_gpu.memdesc_subview %3[%arg28, %c0_i32, %c0_i32] {async_task_id = dense<0> : vector<1xi32>} : !tt.memdesc<2x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
        triton_nvidia_gpu.async_tma_copy_global_to_local %arg8[%98, %c0_i32] %102, %101, %true {async_task_id = dense<0> : vector<1xi32>} : <i8, 0>, <1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> <128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc)
        tt.proton_record <6, "end", "cycle", "warpgroup">
        tt.proton_record <7, "start", "cycle", "warpgroup">
        %103 = arith.addi %arg28, %c1_i32 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc133)
        %104 = arith.cmpi uge, %103, %c2_i32 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc133)
        %105 = arith.cmpi ult, %103, %c2_i32 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc133)
        %106 = arith.addi %arg28, %c-1_i32 : i32 loc(#loc133)
        %107 = arith.select %104, %106, %103 {async_task_id = dense<0> : vector<1xi32>} : i32 loc(#loc133)
        %108 = arith.xori %arg27, %true {async_task_id = dense<0> : vector<1xi32>} : i1 loc(#loc133)
        %109 = arith.andi %104, %108 {async_task_id = dense<0> : vector<1xi32>} : i1 loc(#loc133)
        %110 = arith.andi %105, %arg27 {async_task_id = dense<0> : vector<1xi32>} : i1 loc(#loc133)
        %111 = arith.ori %109, %110 {async_task_id = dense<0> : vector<1xi32>} : i1 loc(#loc133)
        tt.proton_record <7, "end", "cycle", "warpgroup">
        scf.yield {async_task_id = dense<0> : vector<1xi32>} %111, %107 : i1, i32 loc(#loc140)
      } {async_task_id = dense<0> : vector<1xi32>, tt.loop_schedule = "default"} loc(#loc133)
    } {async_task_id = dense<0> : vector<1xi32>} loc(#loc)
    %57 = arith.cmpi eq, %55, %c1_i32 : i32 loc(#loc)
    scf.if %57 {
      triton_nvidia_gpu.reg_alloc 240 loc(#loc)
      %59 = tt.get_program_id x {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc68)
      %60 = tt.get_program_id y {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc69)
      %61 = arith.divsi %60, %arg23 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc70)
      %62 = arith.remsi %60, %arg23 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc71)
      %63 = arith.extsi %61 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc72)
      %64 = arith.extsi %arg10 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc73)
      %65 = arith.muli %63, %64 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc73)
      %66 = arith.extsi %62 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc74)
      %67 = arith.extsi %arg11 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc75)
      %68 = arith.muli %66, %67 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc75)
      %69 = arith.addi %65, %68 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc76)
      %70 = arith.muli %59, %c128_i32 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc92)
      %71 = tt.make_range {async_task_id = dense<1> : vector<1xi32>, end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked> loc(#loc93)
      %72 = tt.splat %70 {async_task_id = dense<1> : vector<1xi32>} : i32 -> tensor<64xi32, #blocked> loc(#loc94)
      %73 = arith.addi %72, %71 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xi32, #blocked> loc(#loc94)
      %74 = arith.mulf %arg3, %cst {async_task_id = dense<1> : vector<1xi32>} : f32 loc(#loc95)
      %75 = triton_gpu.memdesc_subview %19[%c0_i32] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
      triton_nvidia_gpu.wait_barrier %75, %c0_i32 {async_task_id = dense<1> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
      %76 = triton_gpu.memdesc_subview %0[%c0_i32, %c0_i32, %c0_i32] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<1x64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x128xbf16, #shared, #triton_gpu.shared_memory> loc(#loc)
      %77 = tt.splat %74 {async_task_id = dense<1> : vector<1xi32>} : f32 -> tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc141)
      %78 = tt.splat %74 {async_task_id = dense<1> : vector<1xi32>} : f32 -> tensor<64x128xf32, #mma> loc(#loc142)
      %79:5 = scf.for %arg26 = %c0_i32 to %arg24 step %c128_i32 iter_args(%arg27 = %cst_2, %arg28 = %cst_0, %arg29 = %cst_1, %arg30 = %false, %arg31 = %c0_i32) -> (tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, tensor<64x128xf32, #mma>, tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, i1, i32)  : i32 {
        tt.proton_record <11, "start", "cycle", "warpgroup">
        %110 = triton_gpu.memdesc_subview %10[%arg31] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        %111 = arith.extsi %arg30 {async_task_id = dense<1> : vector<1xi32>} : i1 to i32 loc(#loc)
        tt.proton_record <11, "end", "cycle", "warpgroup">
        triton_nvidia_gpu.wait_barrier %110, %111 {async_task_id = dense<1> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        tt.proton_record <12, "start", "cycle", "warpgroup">
        %112 = triton_gpu.memdesc_subview %2[%arg31, %c0_i32, %c0_i32] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<2x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> loc(#loc)
        %113 = tt.trans %112 {async_task_id = dense<1> : vector<1xi32>, order = array<i32: 1, 0>} : !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> -> !tt.memdesc<128x128xbf16, #shared2, #triton_gpu.shared_memory> loc(#loc143)
        %114 = triton_nvidia_gpu.warp_group_dot %76, %113, %cst_0, %false {async_task_id = dense<1> : vector<1xi32>, inputPrecision = 0 : i32} : !tt.memdesc<64x128xbf16, #shared, #triton_gpu.shared_memory> * !tt.memdesc<128x128xbf16, #shared2, #triton_gpu.shared_memory> -> tensor<64x128xf32, #mma> loc(#loc144)
        tt.proton_record <12, "end", "cycle", "warpgroup">
        tt.proton_record <13, "start", "cycle", "warpgroup">
        %115 = "tt.reduce"(%114) <{axis = 1 : i32}> ({
        ^bb0(%arg32: f32 loc(callsite(#loc146 at #loc3)), %arg33: f32 loc(callsite(#loc146 at #loc3))):
          %159 = arith.maxnumf %arg32, %arg33 {async_task_id = dense<1> : vector<1xi32>} : f32 loc(#loc169)
          tt.reduce.return %159 {async_task_id = dense<1> : vector<1xi32>} : f32 loc(#loc163)
        }) {async_task_id = dense<1> : vector<1xi32>} : (tensor<64x128xf32, #mma>) -> tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc163)
        %116 = arith.mulf %115, %77 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc141)
        %117 = arith.maxnumf %arg29, %116 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc148)
        %118 = arith.mulf %114, %78 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc142)
        %119 = tt.expand_dims %117 {async_task_id = dense<1> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<64x1xf32, #mma> loc(#loc149)
        %120 = tt.broadcast %119 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x1xf32, #mma> -> tensor<64x128xf32, #mma> loc(#loc150)
        %121 = arith.subf %118, %120 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc150)
        %122 = math.exp2 %121 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc151)
        %123 = "tt.reduce"(%122) <{axis = 1 : i32}> ({
        ^bb0(%arg32: f32 loc(callsite(#loc153 at #loc3)), %arg33: f32 loc(callsite(#loc153 at #loc3))):
          %159 = arith.addf %arg32, %arg33 {async_task_id = dense<1> : vector<1xi32>} : f32 loc(#loc170)
          tt.reduce.return %159 {async_task_id = dense<1> : vector<1xi32>} : f32 loc(#loc166)
        }) {async_task_id = dense<1> : vector<1xi32>} : (tensor<64x128xf32, #mma>) -> tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc166)
        %124 = arith.subf %arg29, %117 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc155)
        %125 = math.exp2 %124 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc156)
        %126 = arith.mulf %arg27, %125 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc157)
        %127 = arith.addf %126, %123 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc158)
        %128 = tt.expand_dims %125 {async_task_id = dense<1> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<64x1xf32, #mma> loc(#loc159)
        %129 = tt.broadcast %128 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x1xf32, #mma> -> tensor<64x128xf32, #mma> loc(#loc160)
        %130 = arith.mulf %arg28, %129 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc160)
        %131 = triton_gpu.memdesc_subview %4[%arg31] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        tt.proton_record <13, "end", "cycle", "warpgroup">
        triton_nvidia_gpu.wait_barrier %131, %111 {async_task_id = dense<1> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        tt.proton_record <14, "start", "cycle", "warpgroup">
        %132 = triton_gpu.memdesc_subview %3[%arg31, %c0_i32, %c0_i32] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<2x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> loc(#loc)
        %133 = arith.truncf %122 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32, #mma> to tensor<64x128xbf16, #mma> loc(#loc161)
        %134 = triton_gpu.convert_layout %133 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xbf16, #mma> -> tensor<64x128xbf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma}>> loc(#loc162)
        %135 = triton_nvidia_gpu.warp_group_dot %134, %132, %130 {async_task_id = dense<1> : vector<1xi32>, inputPrecision = 0 : i32} : tensor<64x128xbf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma}>> * !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> -> tensor<64x128xf32, #mma> loc(#loc162)
        tt.proton_record <14, "end", "cycle", "warpgroup">
        tt.proton_record <15, "start", "cycle", "warpgroup">
        %136 = triton_gpu.memdesc_subview %31[%arg31] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc162)
        %thread_id_x_3 = gpu.thread_id  x loc(#loc162)
        %137 = builtin.unrealized_conversion_cast %thread_id_x_3 : index to i32 loc(#loc162)
        %138 = arith.remui %137, %c128_i32 : i32 loc(#loc162)
        %139 = arith.divui %138, %c8_i32 : i32 loc(#loc162)
        %140 = arith.divui %139, %c4_i32 : i32 loc(#loc162)
        %141 = arith.remui %139, %c4_i32 : i32 loc(#loc162)
        %142 = arith.xori %141, %140 : i32 loc(#loc162)
        %143 = arith.muli %142, %c4_i32 : i32 loc(#loc162)
        %144 = arith.addi %143, %141 : i32 loc(#loc162)
        %145 = arith.remui %138, %c8_i32 : i32 loc(#loc162)
        %146 = arith.cmpi eq, %145, %c0_i32 : i32 loc(#loc162)
        %147 = arith.cmpi ult, %144, %c1_i32 : i32 loc(#loc162)
        %148 = arith.andi %146, %147 : i1 loc(#loc162)
        triton_nvidia_gpu.mbarrier_arrive %136, %148, %144 {async_task_id = dense<1> : vector<1xi32>, operandSegmentSizes = array<i32: 1, 1, 1>, trackAsyncOp = false} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable>, i1, i32 loc(#loc162)
        tt.proton_record <15, "end", "cycle", "warpgroup">
        tt.proton_record <16, "start", "cycle", "warpgroup">
        %149 = triton_gpu.memdesc_subview %43[%arg31] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc162)
        triton_nvidia_gpu.mbarrier_arrive %149, %148, %144 {async_task_id = dense<1> : vector<1xi32>, operandSegmentSizes = array<i32: 1, 1, 1>, trackAsyncOp = false} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable>, i1, i32 loc(#loc162)
        tt.proton_record <16, "end", "cycle", "warpgroup">
        tt.proton_record <17, "start", "cycle", "warpgroup">
        %150 = arith.addi %arg31, %c1_i32 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc133)
        %151 = arith.cmpi uge, %150, %c2_i32 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc133)
        %152 = arith.cmpi ult, %150, %c2_i32 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc133)
        %153 = arith.addi %arg31, %c-1_i32 : i32 loc(#loc133)
        %154 = arith.select %151, %153, %150 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc133)
        %155 = arith.xori %arg30, %true {async_task_id = dense<1> : vector<1xi32>} : i1 loc(#loc133)
        %156 = arith.andi %151, %155 {async_task_id = dense<1> : vector<1xi32>} : i1 loc(#loc133)
        %157 = arith.andi %152, %arg30 {async_task_id = dense<1> : vector<1xi32>} : i1 loc(#loc133)
        %158 = arith.ori %156, %157 {async_task_id = dense<1> : vector<1xi32>} : i1 loc(#loc133)
        tt.proton_record <17, "end", "cycle", "warpgroup">
        scf.yield {async_task_id = dense<1> : vector<1xi32>} %127, %135, %117, %158, %154 : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, tensor<64x128xf32, #mma>, tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, i1, i32 loc(#loc140)
      } {async_task_id = dense<1> : vector<1xi32>, tt.loop_schedule = "default"} loc(#loc133)
      %80 = math.log2 %79#0 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc118)
      %81 = arith.addf %79#2, %80 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc119)
      %82 = tt.expand_dims %79#0 {async_task_id = dense<1> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<64x1xf32, #mma> loc(#loc120)
      %83 = tt.broadcast %82 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x1xf32, #mma> -> tensor<64x128xf32, #mma> loc(#loc121)
      %84 = arith.divf %79#1, %83 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc121)
      %85 = arith.muli %60, %arg24 {async_task_id = dense<1> : vector<1xi32>} : i32 loc(#loc122)
      %86 = tt.addptr %arg4, %85 {async_task_id = dense<1> : vector<1xi32>} : !tt.ptr<f32>, i32 loc(#loc123)
      %87 = tt.splat %86 {async_task_id = dense<1> : vector<1xi32>} : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc124)
      %88 = tt.addptr %87, %73 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc124)
      %89 = triton_gpu.convert_layout %81 {async_task_id = dense<1> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<64xf32, #blocked> loc(#loc125)
      tt.store %88, %89 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc125)
      %90 = arith.truncf %84 {async_task_id = dense<1> : vector<1xi32>} : tensor<64x128xf32, #mma> to tensor<64x128xbf16, #mma> loc(#loc126)
      %91 = arith.extsi %arg21 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc127)
      %92 = arith.divsi %69, %91 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc127)
      %93 = arith.extsi %70 {async_task_id = dense<1> : vector<1xi32>} : i32 to i64 loc(#loc128)
      %94 = arith.addi %92, %93 {async_task_id = dense<1> : vector<1xi32>} : i64 loc(#loc128)
      %95 = arith.trunci %94 {async_task_id = dense<1> : vector<1xi32>} : i64 to i32 loc(#loc129)
      %96 = triton_gpu.local_alloc %90 {async_task_id = dense<1> : vector<1xi32>} : (tensor<64x128xbf16, #mma>) -> !tt.memdesc<64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc130)
      triton_nvidia_gpu.fence_async_shared {async_task_id = dense<1> : vector<1xi32>, bCluster = false} loc(#loc130)
      triton_nvidia_gpu.async_tma_copy_local_to_global %arg9[%95, %c0_i32] %96 {async_task_id = dense<1> : vector<1xi32>} : <i8, 0>, <64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc130)
      triton_nvidia_gpu.async_tma_store_wait {async_task_id = dense<1> : vector<1xi32>, pendings = 0 : i32} loc(#loc130)
      %97 = triton_gpu.memdesc_subview %23[%c0_i32] {async_task_id = dense<1> : vector<1xi32>} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc130)
      %thread_id_x = gpu.thread_id  x loc(#loc130)
      %98 = builtin.unrealized_conversion_cast %thread_id_x : index to i32 loc(#loc130)
      %99 = arith.remui %98, %c128_i32 : i32 loc(#loc130)
      %100 = arith.divui %99, %c8_i32 : i32 loc(#loc130)
      %101 = arith.divui %100, %c4_i32 : i32 loc(#loc130)
      %102 = arith.remui %100, %c4_i32 : i32 loc(#loc130)
      %103 = arith.xori %102, %101 : i32 loc(#loc130)
      %104 = arith.muli %103, %c4_i32 : i32 loc(#loc130)
      %105 = arith.addi %104, %102 : i32 loc(#loc130)
      %106 = arith.remui %99, %c8_i32 : i32 loc(#loc130)
      %107 = arith.cmpi eq, %106, %c0_i32 : i32 loc(#loc130)
      %108 = arith.cmpi ult, %105, %c1_i32 : i32 loc(#loc130)
      %109 = arith.andi %107, %108 : i1 loc(#loc130)
      triton_nvidia_gpu.mbarrier_arrive %97, %109, %105 {async_task_id = dense<1> : vector<1xi32>, operandSegmentSizes = array<i32: 1, 1, 1>, trackAsyncOp = false} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable>, i1, i32 loc(#loc130)
    } {async_task_id = dense<1> : vector<1xi32>} loc(#loc)
    %58 = arith.cmpi eq, %55, %c2_i32 : i32 loc(#loc)
    scf.if %58 {
      triton_nvidia_gpu.reg_alloc 240 loc(#loc)
      %59 = tt.get_program_id x {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc68)
      %60 = tt.get_program_id y {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc69)
      %61 = arith.divsi %60, %arg23 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc70)
      %62 = arith.remsi %60, %arg23 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc71)
      %63 = arith.extsi %61 {async_task_id = dense<2> : vector<1xi32>} : i32 to i64 loc(#loc72)
      %64 = arith.extsi %arg10 {async_task_id = dense<2> : vector<1xi32>} : i32 to i64 loc(#loc73)
      %65 = arith.muli %63, %64 {async_task_id = dense<2> : vector<1xi32>} : i64 loc(#loc73)
      %66 = arith.extsi %62 {async_task_id = dense<2> : vector<1xi32>} : i32 to i64 loc(#loc74)
      %67 = arith.extsi %arg11 {async_task_id = dense<2> : vector<1xi32>} : i32 to i64 loc(#loc75)
      %68 = arith.muli %66, %67 {async_task_id = dense<2> : vector<1xi32>} : i64 loc(#loc75)
      %69 = arith.addi %65, %68 {async_task_id = dense<2> : vector<1xi32>} : i64 loc(#loc76)
      %70 = arith.muli %59, %c128_i32 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc92)
      %71 = tt.make_range {async_task_id = dense<2> : vector<1xi32>, end = 128 : i32, start = 64 : i32} : tensor<64xi32, #blocked> loc(#loc93)
      %72 = tt.splat %70 {async_task_id = dense<2> : vector<1xi32>} : i32 -> tensor<64xi32, #blocked> loc(#loc94)
      %73 = arith.addi %72, %71 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xi32, #blocked> loc(#loc94)
      %74 = arith.mulf %arg3, %cst {async_task_id = dense<2> : vector<1xi32>} : f32 loc(#loc95)
      %75 = triton_gpu.memdesc_subview %16[%c0_i32] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
      triton_nvidia_gpu.wait_barrier %75, %c0_i32 {async_task_id = dense<2> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
      %76 = triton_gpu.memdesc_subview %1[%c0_i32, %c0_i32, %c0_i32] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<1x64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<64x128xbf16, #shared, #triton_gpu.shared_memory> loc(#loc)
      %77 = tt.splat %74 {async_task_id = dense<2> : vector<1xi32>} : f32 -> tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc141)
      %78 = tt.splat %74 {async_task_id = dense<2> : vector<1xi32>} : f32 -> tensor<64x128xf32, #mma> loc(#loc142)
      %79:5 = scf.for %arg26 = %c0_i32 to %arg24 step %c128_i32 iter_args(%arg27 = %cst_2, %arg28 = %cst_0, %arg29 = %cst_1, %arg30 = %false, %arg31 = %c0_i32) -> (tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, tensor<64x128xf32, #mma>, tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, i1, i32)  : i32 {
        tt.proton_record <21, "start", "cycle", "warpgroup">
        %111 = triton_gpu.memdesc_subview %10[%arg31] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        %112 = arith.extsi %arg30 {async_task_id = dense<2> : vector<1xi32>} : i1 to i32 loc(#loc)
        tt.proton_record <21, "end", "cycle", "warpgroup">
        triton_nvidia_gpu.wait_barrier %111, %112 {async_task_id = dense<2> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        tt.proton_record <22, "start", "cycle", "warpgroup">
        %113 = triton_gpu.memdesc_subview %2[%arg31, %c0_i32, %c0_i32] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<2x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> loc(#loc)
        %114 = tt.trans %113 {async_task_id = dense<2> : vector<1xi32>, order = array<i32: 1, 0>} : !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> -> !tt.memdesc<128x128xbf16, #shared2, #triton_gpu.shared_memory> loc(#loc143)
        %115 = triton_nvidia_gpu.warp_group_dot %76, %114, %cst_0, %false {async_task_id = dense<2> : vector<1xi32>, inputPrecision = 0 : i32} : !tt.memdesc<64x128xbf16, #shared, #triton_gpu.shared_memory> * !tt.memdesc<128x128xbf16, #shared2, #triton_gpu.shared_memory> -> tensor<64x128xf32, #mma> loc(#loc144)
        tt.proton_record <22, "end", "cycle", "warpgroup">
        tt.proton_record <23, "start", "cycle", "warpgroup">
        %116 = "tt.reduce"(%115) <{axis = 1 : i32}> ({
        ^bb0(%arg32: f32 loc(callsite(#loc146 at #loc3)), %arg33: f32 loc(callsite(#loc146 at #loc3))):
          %160 = arith.maxnumf %arg32, %arg33 {async_task_id = dense<2> : vector<1xi32>} : f32 loc(#loc169)
          tt.reduce.return %160 {async_task_id = dense<2> : vector<1xi32>} : f32 loc(#loc163)
        }) {async_task_id = dense<2> : vector<1xi32>} : (tensor<64x128xf32, #mma>) -> tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc163)
        %117 = arith.mulf %116, %77 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc141)
        %118 = arith.maxnumf %arg29, %117 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc148)
        %119 = arith.mulf %115, %78 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc142)
        %120 = tt.expand_dims %118 {async_task_id = dense<2> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<64x1xf32, #mma> loc(#loc149)
        %121 = tt.broadcast %120 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x1xf32, #mma> -> tensor<64x128xf32, #mma> loc(#loc150)
        %122 = arith.subf %119, %121 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc150)
        %123 = math.exp2 %122 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc151)
        %124 = "tt.reduce"(%123) <{axis = 1 : i32}> ({
        ^bb0(%arg32: f32 loc(callsite(#loc153 at #loc3)), %arg33: f32 loc(callsite(#loc153 at #loc3))):
          %160 = arith.addf %arg32, %arg33 {async_task_id = dense<2> : vector<1xi32>} : f32 loc(#loc170)
          tt.reduce.return %160 {async_task_id = dense<2> : vector<1xi32>} : f32 loc(#loc166)
        }) {async_task_id = dense<2> : vector<1xi32>} : (tensor<64x128xf32, #mma>) -> tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc166)
        %125 = arith.subf %arg29, %118 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc155)
        %126 = math.exp2 %125 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc156)
        %127 = arith.mulf %arg27, %126 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc157)
        %128 = arith.addf %127, %124 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc158)
        %129 = tt.expand_dims %126 {async_task_id = dense<2> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<64x1xf32, #mma> loc(#loc159)
        %130 = tt.broadcast %129 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x1xf32, #mma> -> tensor<64x128xf32, #mma> loc(#loc160)
        %131 = arith.mulf %arg28, %130 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc160)
        %132 = triton_gpu.memdesc_subview %4[%arg31] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        tt.proton_record <23, "end", "cycle", "warpgroup">
        triton_nvidia_gpu.wait_barrier %132, %112 {async_task_id = dense<2> : vector<1xi32>} : <1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc)
        tt.proton_record <24, "start", "cycle", "warpgroup">
        %133 = triton_gpu.memdesc_subview %3[%arg31, %c0_i32, %c0_i32] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<2x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> loc(#loc)
        %134 = arith.truncf %123 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xf32, #mma> to tensor<64x128xbf16, #mma> loc(#loc161)
        %135 = triton_gpu.convert_layout %134 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xbf16, #mma> -> tensor<64x128xbf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma}>> loc(#loc162)
        %136 = triton_nvidia_gpu.warp_group_dot %135, %133, %131 {async_task_id = dense<2> : vector<1xi32>, inputPrecision = 0 : i32} : tensor<64x128xbf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma}>> * !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> -> tensor<64x128xf32, #mma> loc(#loc162)
        tt.proton_record <24, "end", "cycle", "warpgroup">
        tt.proton_record <25, "start", "cycle", "warpgroup">
        %137 = triton_gpu.memdesc_subview %37[%arg31] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc162)
        %thread_id_x_3 = gpu.thread_id  x loc(#loc162)
        %138 = builtin.unrealized_conversion_cast %thread_id_x_3 : index to i32 loc(#loc162)
        %139 = arith.remui %138, %c128_i32 : i32 loc(#loc162)
        %140 = arith.divui %139, %c8_i32 : i32 loc(#loc162)
        %141 = arith.divui %140, %c4_i32 : i32 loc(#loc162)
        %142 = arith.remui %140, %c4_i32 : i32 loc(#loc162)
        %143 = arith.xori %142, %141 : i32 loc(#loc162)
        %144 = arith.muli %143, %c4_i32 : i32 loc(#loc162)
        %145 = arith.addi %144, %142 : i32 loc(#loc162)
        %146 = arith.remui %139, %c8_i32 : i32 loc(#loc162)
        %147 = arith.cmpi eq, %146, %c0_i32 : i32 loc(#loc162)
        %148 = arith.cmpi ult, %145, %c1_i32 : i32 loc(#loc162)
        %149 = arith.andi %147, %148 : i1 loc(#loc162)
        triton_nvidia_gpu.mbarrier_arrive %137, %149, %145 {async_task_id = dense<2> : vector<1xi32>, operandSegmentSizes = array<i32: 1, 1, 1>, trackAsyncOp = false} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable>, i1, i32 loc(#loc162)
        tt.proton_record <25, "end", "cycle", "warpgroup">
        tt.proton_record <26, "start", "cycle", "warpgroup">
        %150 = triton_gpu.memdesc_subview %49[%arg31] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<2xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc162)
        triton_nvidia_gpu.mbarrier_arrive %150, %149, %145 {async_task_id = dense<2> : vector<1xi32>, operandSegmentSizes = array<i32: 1, 1, 1>, trackAsyncOp = false} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable>, i1, i32 loc(#loc162)
        tt.proton_record <26, "end", "cycle", "warpgroup">
        tt.proton_record <27, "start", "cycle", "warpgroup">
        %151 = arith.addi %arg31, %c1_i32 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc133)
        %152 = arith.cmpi uge, %151, %c2_i32 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc133)
        %153 = arith.cmpi ult, %151, %c2_i32 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc133)
        %154 = arith.addi %arg31, %c-1_i32 : i32 loc(#loc133)
        %155 = arith.select %152, %154, %151 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc133)
        %156 = arith.xori %arg30, %true {async_task_id = dense<2> : vector<1xi32>} : i1 loc(#loc133)
        %157 = arith.andi %152, %156 {async_task_id = dense<2> : vector<1xi32>} : i1 loc(#loc133)
        %158 = arith.andi %153, %arg30 {async_task_id = dense<2> : vector<1xi32>} : i1 loc(#loc133)
        %159 = arith.ori %157, %158 {async_task_id = dense<2> : vector<1xi32>} : i1 loc(#loc133)
        tt.proton_record <27, "end", "cycle", "warpgroup">
        scf.yield {async_task_id = dense<2> : vector<1xi32>} %128, %136, %118, %159, %155 : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, tensor<64x128xf32, #mma>, tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, i1, i32 loc(#loc140)
      } {async_task_id = dense<2> : vector<1xi32>, tt.loop_schedule = "default"} loc(#loc133)
      %80 = math.log2 %79#0 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc118)
      %81 = arith.addf %79#2, %80 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc119)
      %82 = tt.expand_dims %79#0 {async_task_id = dense<2> : vector<1xi32>, axis = 1 : i32} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<64x1xf32, #mma> loc(#loc120)
      %83 = tt.broadcast %82 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x1xf32, #mma> -> tensor<64x128xf32, #mma> loc(#loc121)
      %84 = arith.divf %79#1, %83 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xf32, #mma> loc(#loc121)
      %85 = arith.muli %60, %arg24 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc122)
      %86 = tt.addptr %arg4, %85 {async_task_id = dense<2> : vector<1xi32>} : !tt.ptr<f32>, i32 loc(#loc123)
      %87 = tt.splat %86 {async_task_id = dense<2> : vector<1xi32>} : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc124)
      %88 = tt.addptr %87, %73 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc124)
      %89 = triton_gpu.convert_layout %81 {async_task_id = dense<2> : vector<1xi32>} : tensor<64xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<64xf32, #blocked> loc(#loc125)
      tt.store %88, %89 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc125)
      %90 = arith.truncf %84 {async_task_id = dense<2> : vector<1xi32>} : tensor<64x128xf32, #mma> to tensor<64x128xbf16, #mma> loc(#loc126)
      %91 = arith.extsi %arg21 {async_task_id = dense<2> : vector<1xi32>} : i32 to i64 loc(#loc127)
      %92 = arith.divsi %69, %91 {async_task_id = dense<2> : vector<1xi32>} : i64 loc(#loc127)
      %93 = arith.extsi %70 {async_task_id = dense<2> : vector<1xi32>} : i32 to i64 loc(#loc128)
      %94 = arith.addi %92, %93 {async_task_id = dense<2> : vector<1xi32>} : i64 loc(#loc128)
      %95 = arith.trunci %94 {async_task_id = dense<2> : vector<1xi32>} : i64 to i32 loc(#loc129)
      %96 = arith.addi %95, %c64_i32 {async_task_id = dense<2> : vector<1xi32>} : i32 loc(#loc130)
      %97 = triton_gpu.local_alloc %90 {async_task_id = dense<2> : vector<1xi32>} : (tensor<64x128xbf16, #mma>) -> !tt.memdesc<64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc130)
      triton_nvidia_gpu.fence_async_shared {async_task_id = dense<2> : vector<1xi32>, bCluster = false} loc(#loc130)
      triton_nvidia_gpu.async_tma_copy_local_to_global %arg9[%96, %c0_i32] %97 {async_task_id = dense<2> : vector<1xi32>} : <i8, 0>, <64x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc130)
      triton_nvidia_gpu.async_tma_store_wait {async_task_id = dense<2> : vector<1xi32>, pendings = 0 : i32} loc(#loc130)
      %98 = triton_gpu.memdesc_subview %27[%c0_i32] {async_task_id = dense<2> : vector<1xi32>} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc130)
      %thread_id_x = gpu.thread_id  x loc(#loc130)
      %99 = builtin.unrealized_conversion_cast %thread_id_x : index to i32 loc(#loc130)
      %100 = arith.remui %99, %c128_i32 : i32 loc(#loc130)
      %101 = arith.divui %100, %c8_i32 : i32 loc(#loc130)
      %102 = arith.divui %101, %c4_i32 : i32 loc(#loc130)
      %103 = arith.remui %101, %c4_i32 : i32 loc(#loc130)
      %104 = arith.xori %103, %102 : i32 loc(#loc130)
      %105 = arith.muli %104, %c4_i32 : i32 loc(#loc130)
      %106 = arith.addi %105, %103 : i32 loc(#loc130)
      %107 = arith.remui %100, %c8_i32 : i32 loc(#loc130)
      %108 = arith.cmpi eq, %107, %c0_i32 : i32 loc(#loc130)
      %109 = arith.cmpi ult, %106, %c1_i32 : i32 loc(#loc130)
      %110 = arith.andi %108, %109 : i1 loc(#loc130)
      triton_nvidia_gpu.mbarrier_arrive %98, %110, %106 {async_task_id = dense<2> : vector<1xi32>, operandSegmentSizes = array<i32: 1, 1, 1>, trackAsyncOp = false} : !tt.memdesc<1xi64, #shared1, #triton_gpu.shared_memory, mutable>, i1, i32 loc(#loc130)
    } {async_task_id = dense<2> : vector<1xi32>} loc(#loc)
    tt.return loc(#loc67)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":746:28)
#loc4 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":747:27)
#loc5 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":748:22)
#loc6 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":749:21)
#loc7 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":750:26)
#loc8 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":750:38)
#loc9 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":750:59)
#loc10 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":750:71)
#loc11 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":750:50)
#loc12 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":806:32)
#loc13 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":806:54)
#loc14 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":806:44)
#loc15 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":806:66)
#loc16 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":808:16)
#loc17 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":273:59)
#loc19 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":311:40)
#loc20 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":266:45)
#loc21 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":273:73)
#loc22 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":273:44)
#loc23 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":275:20)
#loc24 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":311:52)
#loc25 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":311:64)
#loc26 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":313:24)
#loc27 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":327:8)
#loc28 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":792:23)
#loc29 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":792:46)
#loc30 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":792:33)
#loc31 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":800:16)
#loc32 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":289:55)
#loc33 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":290:26)
#loc34 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":281:29)
#loc35 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":282:27)
#loc36 = loc("/home/zhongkai/workspace/kperfir_fa3/python/triton/language/standard.py":184:40)
#loc38 = loc("/home/zhongkai/workspace/kperfir_fa3/python/triton/language/standard.py":163:27)
#loc39 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":289:39)
#loc40 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":290:42)
#loc41 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":290:37)
#loc42 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":291:29)
#loc43 = loc("/home/zhongkai/workspace/kperfir_fa3/python/triton/language/standard.py":267:36)
#loc45 = loc("/home/zhongkai/workspace/kperfir_fa3/python/triton/language/standard.py":256:15)
#loc46 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":294:39)
#loc47 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":294:33)
#loc48 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":295:24)
#loc49 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":295:32)
#loc50 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":297:30)
#loc51 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":297:24)
#loc52 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":323:25)
#loc53 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":324:31)
#loc54 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":876:28)
#loc55 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":876:15)
#loc56 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":877:24)
#loc57 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":877:20)
#loc58 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":878:30)
#loc59 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":878:21)
#loc60 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":878:38)
#loc61 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":879:25)
#loc62 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":883:23)
#loc63 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":884:32)
#loc64 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":884:44)
#loc65 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":884:66)
#loc66 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":884:16)
#loc67 = loc("/home/zhongkai/workspace/tritonbench/tritonbench/kernels/triton_fused_attention.py":1249:4)
#loc68 = loc(callsite(#loc2 at #loc3))
#loc69 = loc(callsite(#loc4 at #loc3))
#loc70 = loc(callsite(#loc5 at #loc3))
#loc71 = loc(callsite(#loc6 at #loc3))
#loc72 = loc(callsite(#loc7 at #loc3))
#loc73 = loc(callsite(#loc8 at #loc3))
#loc74 = loc(callsite(#loc9 at #loc3))
#loc75 = loc(callsite(#loc10 at #loc3))
#loc76 = loc(callsite(#loc11 at #loc3))
#loc77 = loc(callsite(#loc12 at #loc3))
#loc78 = loc(callsite(#loc13 at #loc3))
#loc79 = loc(callsite(#loc14 at #loc3))
#loc80 = loc(callsite(#loc15 at #loc3))
#loc81 = loc(callsite(#loc16 at #loc3))
#loc82 = loc(callsite(#loc17 at #loc18))
#loc83 = loc(callsite(#loc19 at #loc18))
#loc84 = loc(callsite(#loc20 at #loc18))
#loc85 = loc(callsite(#loc21 at #loc18))
#loc86 = loc(callsite(#loc22 at #loc18))
#loc87 = loc(callsite(#loc23 at #loc18))
#loc88 = loc(callsite(#loc24 at #loc18))
#loc89 = loc(callsite(#loc25 at #loc18))
#loc90 = loc(callsite(#loc26 at #loc18))
#loc91 = loc(callsite(#loc27 at #loc18))
#loc92 = loc(callsite(#loc28 at #loc3))
#loc93 = loc(callsite(#loc29 at #loc3))
#loc94 = loc(callsite(#loc30 at #loc3))
#loc95 = loc(callsite(#loc31 at #loc3))
#loc96 = loc(callsite(#loc32 at #loc18))
#loc97 = loc(callsite(#loc33 at #loc18))
#loc98 = loc(callsite(#loc34 at #loc18))
#loc99 = loc(callsite(#loc35 at #loc18))
#loc100 = loc(callsite(#loc36 at #loc37))
#loc102 = loc(callsite(#loc38 at #loc36))
#loc103 = loc(callsite(#loc39 at #loc18))
#loc104 = loc(callsite(#loc40 at #loc18))
#loc105 = loc(callsite(#loc41 at #loc18))
#loc106 = loc(callsite(#loc42 at #loc18))
#loc107 = loc(callsite(#loc43 at #loc44))
#loc109 = loc(callsite(#loc45 at #loc43))
#loc110 = loc(callsite(#loc46 at #loc18))
#loc111 = loc(callsite(#loc47 at #loc18))
#loc112 = loc(callsite(#loc48 at #loc18))
#loc113 = loc(callsite(#loc49 at #loc18))
#loc114 = loc(callsite(#loc50 at #loc18))
#loc115 = loc(callsite(#loc51 at #loc18))
#loc116 = loc(callsite(#loc52 at #loc18))
#loc117 = loc(callsite(#loc53 at #loc18))
#loc118 = loc(callsite(#loc54 at #loc3))
#loc119 = loc(callsite(#loc55 at #loc3))
#loc120 = loc(callsite(#loc56 at #loc3))
#loc121 = loc(callsite(#loc57 at #loc3))
#loc122 = loc(callsite(#loc58 at #loc3))
#loc123 = loc(callsite(#loc59 at #loc3))
#loc124 = loc(callsite(#loc60 at #loc3))
#loc125 = loc(callsite(#loc61 at #loc3))
#loc126 = loc(callsite(#loc62 at #loc3))
#loc127 = loc(callsite(#loc63 at #loc3))
#loc128 = loc(callsite(#loc64 at #loc3))
#loc129 = loc(callsite(#loc65 at #loc3))
#loc130 = loc(callsite(#loc66 at #loc3))
#loc131 = loc(callsite(#loc82 at #loc3))
#loc132 = loc(callsite(#loc83 at #loc3))
#loc133 = loc(callsite(#loc84 at #loc3))
#loc134 = loc(callsite(#loc85 at #loc3))
#loc135 = loc(callsite(#loc86 at #loc3))
#loc136 = loc(callsite(#loc87 at #loc3))
#loc137 = loc(callsite(#loc88 at #loc3))
#loc138 = loc(callsite(#loc89 at #loc3))
#loc139 = loc(callsite(#loc90 at #loc3))
#loc140 = loc(callsite(#loc91 at #loc3))
#loc141 = loc(callsite(#loc96 at #loc3))
#loc142 = loc(callsite(#loc97 at #loc3))
#loc143 = loc(callsite(#loc98 at #loc3))
#loc144 = loc(callsite(#loc99 at #loc3))
#loc145 = loc(callsite(#loc100 at #loc18))
#loc147 = loc(callsite(#loc102 at #loc37))
#loc148 = loc(callsite(#loc103 at #loc3))
#loc149 = loc(callsite(#loc104 at #loc3))
#loc150 = loc(callsite(#loc105 at #loc3))
#loc151 = loc(callsite(#loc106 at #loc3))
#loc152 = loc(callsite(#loc107 at #loc18))
#loc154 = loc(callsite(#loc109 at #loc44))
#loc155 = loc(callsite(#loc110 at #loc3))
#loc156 = loc(callsite(#loc111 at #loc3))
#loc157 = loc(callsite(#loc112 at #loc3))
#loc158 = loc(callsite(#loc113 at #loc3))
#loc159 = loc(callsite(#loc114 at #loc3))
#loc160 = loc(callsite(#loc115 at #loc3))
#loc161 = loc(callsite(#loc116 at #loc3))
#loc162 = loc(callsite(#loc117 at #loc3))
#loc163 = loc(callsite(#loc145 at #loc3))
#loc165 = loc(callsite(#loc147 at #loc18))
#loc166 = loc(callsite(#loc152 at #loc3))
#loc168 = loc(callsite(#loc154 at #loc18))
#loc169 = loc(callsite(#loc165 at #loc3))
#loc170 = loc(callsite(#loc168 at #loc3))
